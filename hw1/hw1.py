import csv
import sys
import codecs
import pandas

# 18.98928879072751 9 feature
w = [-0.016325495048894263, -0.02870183148689336, 0.21896919137679158, -0.2325277127606827, -0.05766452480800722, 0.5376408752242116, -0.5709474904959306, -0.001878858022979187, 1.1118700277274205, 0.4654965052872306]
index = 0
# read process and get all PM2.5 data
with open(sys.argv[2], 'w', encoding='utf-8') as f:
	spamwriter = csv.writer(f, delimiter=',')
	spamwriter.writerow(['id', 'value'])
	data = pandas.read_csv(sys.argv[1]).values.tolist()
	# start testing x_vector to get y
	for i in range(8, len(data), 18):
		# add bias
		inner_product = w[9]
		# do inner product
		for j in range(0,9):
			inner_product += w[j] * float(data[i][j + 2])
		if inner_product < 0:
			inner_product = 0
		spamwriter.writerow(['id_'+str(index), inner_product])
		index += 1
"""
# 19.70963809779624 162 feature
w = [-0.00839178669522993, -0.007949708768146957, -0.0051573154726977976, -0.004979563595196644, -0.0016451203949475104, -0.0016848958191099694, 5.0079744636263796e-05, 0.0023281712384708186, 0.009376968680115939, 0.001339736864965458, 0.0014036909919202744, 0.001383889585420553, 0.0013476516170889952, 0.0015621908430654555, 0.001720689164112158, 0.0018054318279841837, 0.0022746480549920875, 0.003115174451351107, 0.00026280545295019657, 0.00037746388259717636, 0.0009195256897205976, 0.000513140827051008, 0.000754130294145205, -4.9925134009106255e-05, 0.0009736504022445015, 0.00441660956133819, 0.007575728621283963, -0.00019230427198579055, -0.0001681091447507368, -8.832769411677034e-05, 7.223995489733777e-05, 0.0002321310135689999, -1.74463350426251e-05, 8.645899841250284e-05, 0.0008114081397242614, 0.0016544544796278462, 0.008359551320459445, 0.007528522391532921, 0.008246285092849134, 0.001273671867559018, -0.0012577453370845983, -0.0023037191913168964, 0.0035098650403205885, 0.010496150171594533, 0.013096104186327395, -0.010542210167632097, -0.014651741217312208, -0.012613426292951696, -0.014204429799049722, -0.01194528169823981, -0.01736967052624625, -0.012139091017137902, 0.034768635245427136, 0.09788057033503159, -0.002853629021203643, -0.0066215163690721435, -0.002958513149520086, -0.010197277056297482, -0.01212892463110114, -0.018831326628959786, -0.007765370538279614, 0.047164002631698974, 0.11067241153741025, 0.004490391799676843, 0.0034402950658895554, -0.008533214302278712, -0.014322563181980694, -0.019779881646887116, -0.023494140987338145, -0.010234492208068883, 0.02643502972318824, 0.080117115949383, -0.010967843884561856, 0.010950926966087795, 0.007810941429077602, -0.008998846119180781, -0.006795076260182813, 0.023629685681016043, -0.025280505074551027, -0.026542458175514084, 0.10504368219216031, 0.011085125108264305, 0.015441537164325652, 0.015021825741091201, 0.01209454427526322, 0.031155584116248598, 0.042152116572847294, -0.14720032455491897, 0.16278785604625554, 0.6442189677878796, -0.0014806068102961262, -0.006174272206876752, -0.010533642635825844, -0.006535108145676741, -0.0029819218260968006, 0.0019311546724498172, -0.0047223331061159056, -0.011875270225193532, -0.015380802217612607, 0.013124147313680955, 0.004854333495752045, -0.00609489153177343, -0.010134349677119592, -0.008829650314498694, -0.003283000681174645, -0.009917044089654065, 0.0028494942644175843, 0.00639147623336241, -0.004533896249502504, 0.003813268973946626, -2.8835949871554954e-05, -0.0005234949596569068, 0.0016569813428047842, 0.0028772534377216334, 0.004066999650141219, 0.020536958055933422, 0.0369068335582322, 0.001227094770872493, 0.0010863603042108032, 0.0011659108252372724, 0.0012545434836593178, 0.0018684897730003641, 0.0018230579154000098, 0.0018338836261443962, 0.002904858726343138, 0.0046130810118263565, -0.0006255159842823809, 0.0030358997675893054, -0.0004860955415467823, 0.002796835246039697, 0.0004530358644940355, 0.0012253764281146718, -0.0028618682036181497, 0.0015007371040854374, 0.001584297696576945, -0.001726901330136423, -0.0010704183457236154, 0.00012074011067015385, -0.0023311787643127864, 0.0012450819454714061, -0.0002695809820134003, -0.0016511762197003895, -0.003050486278108615, 0.0009392205773209011, -0.003401638775977892, -0.0022701457149919284, -0.0017558948514669384, -0.0026482429821915623, -0.0027847801842959302, -0.0039062086592604834, -0.0059918752193463, -0.006715863354047364, -0.005760619839225818, -0.0041677214063623475, -0.003238448115825689, -0.0043828283114774, -0.003539963550722475, -0.0020295434977681995, -0.001068949984552648, -0.004185955031743994, -0.0053516080241327426, -0.0036171253530767416, 0.0006908081997766739]
index = 0
# read process and get all data
with open(sys.argv[2], 'w', encoding='utf-8') as f:
	spamwriter = csv.writer(f, delimiter=',')
	spamwriter.writerow(['id', 'value'])
	data = pandas.read_csv(sys.argv[1], header = -1).values.tolist()
	# start testing x_vector to get y
	inner_product = w[162]
	for i in range(0, len(data)):
		x = i % 18 * 9 - 2
		for j in range(2, 11):
			inner_product += w[x + j] * float(data[i][j])
		if x == 151:
			spamwriter.writerow(['id_'+str(index), inner_product])
			index += 1
			inner_product = w[162]"""
			